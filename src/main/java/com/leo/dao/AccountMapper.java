package com.leo.dao;

import com.leo.domain.Account;
import com.leo.domain.AccountParam;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface AccountMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Wed Apr 29 10:35:51 CST 2020
     */
    @SelectProvider(type=AccountSqlProvider.class, method="countByExample")
    long countByExample(AccountParam example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Wed Apr 29 10:35:51 CST 2020
     */
    @DeleteProvider(type=AccountSqlProvider.class, method="deleteByExample")
    int deleteByExample(AccountParam example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Wed Apr 29 10:35:51 CST 2020
     */
    @Delete({
        "delete from ACCOUNT",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Wed Apr 29 10:35:51 CST 2020
     */
    @Insert({
        "insert into ACCOUNT (ID, ACCID, ",
        "USERNAME, PASSWORD, ",
        "CREATETIME, BITMASK, ",
        "FORBIDTIME, LASTLOGINTIME, ",
        "MOBILE, DEVSTRING, ",
        "PACKAGEFLAG, LOGINPACKAGETYPE, ",
        "PACKAGETYPE, COUNTTYPE, ",
        "REGIESTIP, LOGINDEVSTRING, ",
        "LOGINPACKAGEFLAG, SPREADID, ",
        "RegistTime, DEVICETYPE, ",
        "roletime, logindevinfo, ",
        "pversion, regversion)",
        "values (#{id,jdbcType=INTEGER}, #{accid,jdbcType=INTEGER}, ",
        "#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, ",
        "#{createtime,jdbcType=VARCHAR}, #{bitmask,jdbcType=TINYINT}, ",
        "#{forbidtime,jdbcType=INTEGER}, #{lastlogintime,jdbcType=VARCHAR}, ",
        "#{mobile,jdbcType=VARCHAR}, #{devstring,jdbcType=VARCHAR}, ",
        "#{packageflag,jdbcType=VARCHAR}, #{loginpackagetype,jdbcType=INTEGER}, ",
        "#{packagetype,jdbcType=INTEGER}, #{counttype,jdbcType=INTEGER}, ",
        "#{regiestip,jdbcType=VARCHAR}, #{logindevstring,jdbcType=VARCHAR}, ",
        "#{loginpackageflag,jdbcType=VARCHAR}, #{spreadid,jdbcType=INTEGER}, ",
        "#{registtime,jdbcType=BIGINT}, #{devicetype,jdbcType=INTEGER}, ",
        "#{roletime,jdbcType=BIGINT}, #{logindevinfo,jdbcType=VARCHAR}, ",
        "#{pversion,jdbcType=VARCHAR}, #{regversion,jdbcType=VARCHAR})"
    })
    int insert(Account record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Wed Apr 29 10:35:51 CST 2020
     */
    @InsertProvider(type=AccountSqlProvider.class, method="insertSelective")
    int insertSelective(Account record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Wed Apr 29 10:35:51 CST 2020
     */
    @SelectProvider(type=AccountSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="ACCID", property="accid", jdbcType=JdbcType.INTEGER),
        @Result(column="USERNAME", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="PASSWORD", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATETIME", property="createtime", jdbcType=JdbcType.VARCHAR),
        @Result(column="BITMASK", property="bitmask", jdbcType=JdbcType.TINYINT),
        @Result(column="FORBIDTIME", property="forbidtime", jdbcType=JdbcType.INTEGER),
        @Result(column="LASTLOGINTIME", property="lastlogintime", jdbcType=JdbcType.VARCHAR),
        @Result(column="MOBILE", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="DEVSTRING", property="devstring", jdbcType=JdbcType.VARCHAR),
        @Result(column="PACKAGEFLAG", property="packageflag", jdbcType=JdbcType.VARCHAR),
        @Result(column="LOGINPACKAGETYPE", property="loginpackagetype", jdbcType=JdbcType.INTEGER),
        @Result(column="PACKAGETYPE", property="packagetype", jdbcType=JdbcType.INTEGER),
        @Result(column="COUNTTYPE", property="counttype", jdbcType=JdbcType.INTEGER),
        @Result(column="REGIESTIP", property="regiestip", jdbcType=JdbcType.VARCHAR),
        @Result(column="LOGINDEVSTRING", property="logindevstring", jdbcType=JdbcType.VARCHAR),
        @Result(column="LOGINPACKAGEFLAG", property="loginpackageflag", jdbcType=JdbcType.VARCHAR),
        @Result(column="SPREADID", property="spreadid", jdbcType=JdbcType.INTEGER),
        @Result(column="RegistTime", property="registtime", jdbcType=JdbcType.BIGINT),
        @Result(column="DEVICETYPE", property="devicetype", jdbcType=JdbcType.INTEGER),
        @Result(column="roletime", property="roletime", jdbcType=JdbcType.BIGINT),
        @Result(column="logindevinfo", property="logindevinfo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pversion", property="pversion", jdbcType=JdbcType.VARCHAR),
        @Result(column="regversion", property="regversion", jdbcType=JdbcType.VARCHAR)
    })
    List<Account> selectByExample(AccountParam example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Wed Apr 29 10:35:51 CST 2020
     */
    @Select({
        "select",
        "ID, ACCID, USERNAME, PASSWORD, CREATETIME, BITMASK, FORBIDTIME, LASTLOGINTIME, ",
        "MOBILE, DEVSTRING, PACKAGEFLAG, LOGINPACKAGETYPE, PACKAGETYPE, COUNTTYPE, REGIESTIP, ",
        "LOGINDEVSTRING, LOGINPACKAGEFLAG, SPREADID, RegistTime, DEVICETYPE, roletime, ",
        "logindevinfo, pversion, regversion",
        "from ACCOUNT",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="ACCID", property="accid", jdbcType=JdbcType.INTEGER),
        @Result(column="USERNAME", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="PASSWORD", property="password", jdbcType=JdbcType.VARCHAR),
        @Result(column="CREATETIME", property="createtime", jdbcType=JdbcType.VARCHAR),
        @Result(column="BITMASK", property="bitmask", jdbcType=JdbcType.TINYINT),
        @Result(column="FORBIDTIME", property="forbidtime", jdbcType=JdbcType.INTEGER),
        @Result(column="LASTLOGINTIME", property="lastlogintime", jdbcType=JdbcType.VARCHAR),
        @Result(column="MOBILE", property="mobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="DEVSTRING", property="devstring", jdbcType=JdbcType.VARCHAR),
        @Result(column="PACKAGEFLAG", property="packageflag", jdbcType=JdbcType.VARCHAR),
        @Result(column="LOGINPACKAGETYPE", property="loginpackagetype", jdbcType=JdbcType.INTEGER),
        @Result(column="PACKAGETYPE", property="packagetype", jdbcType=JdbcType.INTEGER),
        @Result(column="COUNTTYPE", property="counttype", jdbcType=JdbcType.INTEGER),
        @Result(column="REGIESTIP", property="regiestip", jdbcType=JdbcType.VARCHAR),
        @Result(column="LOGINDEVSTRING", property="logindevstring", jdbcType=JdbcType.VARCHAR),
        @Result(column="LOGINPACKAGEFLAG", property="loginpackageflag", jdbcType=JdbcType.VARCHAR),
        @Result(column="SPREADID", property="spreadid", jdbcType=JdbcType.INTEGER),
        @Result(column="RegistTime", property="registtime", jdbcType=JdbcType.BIGINT),
        @Result(column="DEVICETYPE", property="devicetype", jdbcType=JdbcType.INTEGER),
        @Result(column="roletime", property="roletime", jdbcType=JdbcType.BIGINT),
        @Result(column="logindevinfo", property="logindevinfo", jdbcType=JdbcType.VARCHAR),
        @Result(column="pversion", property="pversion", jdbcType=JdbcType.VARCHAR),
        @Result(column="regversion", property="regversion", jdbcType=JdbcType.VARCHAR)
    })
    Account selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Wed Apr 29 10:35:51 CST 2020
     */
    @UpdateProvider(type=AccountSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Account record, @Param("example") AccountParam example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Wed Apr 29 10:35:51 CST 2020
     */
    @UpdateProvider(type=AccountSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Account record, @Param("example") AccountParam example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Wed Apr 29 10:35:51 CST 2020
     */
    @UpdateProvider(type=AccountSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Account record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ACCOUNT
     *
     * @mbg.generated Wed Apr 29 10:35:51 CST 2020
     */
    @Update({
        "update ACCOUNT",
        "set ACCID = #{accid,jdbcType=INTEGER},",
          "USERNAME = #{username,jdbcType=VARCHAR},",
          "PASSWORD = #{password,jdbcType=VARCHAR},",
          "CREATETIME = #{createtime,jdbcType=VARCHAR},",
          "BITMASK = #{bitmask,jdbcType=TINYINT},",
          "FORBIDTIME = #{forbidtime,jdbcType=INTEGER},",
          "LASTLOGINTIME = #{lastlogintime,jdbcType=VARCHAR},",
          "MOBILE = #{mobile,jdbcType=VARCHAR},",
          "DEVSTRING = #{devstring,jdbcType=VARCHAR},",
          "PACKAGEFLAG = #{packageflag,jdbcType=VARCHAR},",
          "LOGINPACKAGETYPE = #{loginpackagetype,jdbcType=INTEGER},",
          "PACKAGETYPE = #{packagetype,jdbcType=INTEGER},",
          "COUNTTYPE = #{counttype,jdbcType=INTEGER},",
          "REGIESTIP = #{regiestip,jdbcType=VARCHAR},",
          "LOGINDEVSTRING = #{logindevstring,jdbcType=VARCHAR},",
          "LOGINPACKAGEFLAG = #{loginpackageflag,jdbcType=VARCHAR},",
          "SPREADID = #{spreadid,jdbcType=INTEGER},",
          "RegistTime = #{registtime,jdbcType=BIGINT},",
          "DEVICETYPE = #{devicetype,jdbcType=INTEGER},",
          "roletime = #{roletime,jdbcType=BIGINT},",
          "logindevinfo = #{logindevinfo,jdbcType=VARCHAR},",
          "pversion = #{pversion,jdbcType=VARCHAR},",
          "regversion = #{regversion,jdbcType=VARCHAR}",
        "where ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Account record);

    @Select({
            "select",
            "ID, ACCID, USERNAME, PASSWORD, CREATETIME, BITMASK, FORBIDTIME, LASTLOGINTIME, ",
            "MOBILE, DEVSTRING, PACKAGEFLAG, LOGINPACKAGETYPE, PACKAGETYPE, COUNTTYPE, REGIESTIP, ",
            "LOGINDEVSTRING, LOGINPACKAGEFLAG, SPREADID, RegistTime, DEVICETYPE, roletime, ",
            "logindevinfo, pversion, regversion",
            "from ACCOUNT",
            "where ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
            @Result(column="ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
            @Result(column="ACCID", property="accid", jdbcType=JdbcType.INTEGER),
            @Result(column="USERNAME", property="username", jdbcType=JdbcType.VARCHAR),
            @Result(column="PASSWORD", property="password", jdbcType=JdbcType.VARCHAR),
            @Result(column="CREATETIME", property="createtime", jdbcType=JdbcType.VARCHAR),
            @Result(column="BITMASK", property="bitmask", jdbcType=JdbcType.TINYINT),
            @Result(column="FORBIDTIME", property="forbidtime", jdbcType=JdbcType.INTEGER),
            @Result(column="LASTLOGINTIME", property="lastlogintime", jdbcType=JdbcType.VARCHAR),
            @Result(column="MOBILE", property="mobile", jdbcType=JdbcType.VARCHAR),
            @Result(column="DEVSTRING", property="devstring", jdbcType=JdbcType.VARCHAR),
            @Result(column="PACKAGEFLAG", property="packageflag", jdbcType=JdbcType.VARCHAR),
            @Result(column="LOGINPACKAGETYPE", property="loginpackagetype", jdbcType=JdbcType.INTEGER),
            @Result(column="PACKAGETYPE", property="packagetype", jdbcType=JdbcType.INTEGER),
            @Result(column="COUNTTYPE", property="counttype", jdbcType=JdbcType.INTEGER),
            @Result(column="REGIESTIP", property="regiestip", jdbcType=JdbcType.VARCHAR),
            @Result(column="LOGINDEVSTRING", property="logindevstring", jdbcType=JdbcType.VARCHAR),
            @Result(column="LOGINPACKAGEFLAG", property="loginpackageflag", jdbcType=JdbcType.VARCHAR),
            @Result(column="SPREADID", property="spreadid", jdbcType=JdbcType.INTEGER),
            @Result(column="RegistTime", property="registtime", jdbcType=JdbcType.BIGINT),
            @Result(column="DEVICETYPE", property="devicetype", jdbcType=JdbcType.INTEGER),
            @Result(column="roletime", property="roletime", jdbcType=JdbcType.BIGINT),
            @Result(column="logindevinfo", property="logindevinfo", jdbcType=JdbcType.VARCHAR),
            @Result(column="pversion", property="pversion", jdbcType=JdbcType.VARCHAR),
            @Result(column="regversion", property="regversion", jdbcType=JdbcType.VARCHAR)
    })
    Account selfDefinedSelect(Integer id);

    @Select({
            "select",
            "*",
            "from ACCOUNT",
            "where USERNAME = #{userName,jdbcType=VARCHAR}"
    })
    Account getByUserName(String userName);
}